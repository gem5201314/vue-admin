{"remainingRequest":"/Users/ibona/BL_DIY/bl@cli3_pc/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/ibona/BL_DIY/bl@cli3_pc/src/components/layout/Aside.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/ibona/BL_DIY/bl@cli3_pc/src/components/layout/Aside.vue","mtime":1552547846095},{"path":"/Users/ibona/BL_DIY/bl@cli3_pc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ibona/BL_DIY/bl@cli3_pc/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/ibona/BL_DIY/bl@cli3_pc/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/ibona/BL_DIY/bl@cli3_pc/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport json from '@/config/left_nav_conf'\nexport default {\n  data() {\n    return {\n      configMenu:{},//菜单配置\n      navOneLevel:[],//一级菜单列表\n      navOverLevel:[],//多级菜单列表   \n    }\n  },\n  methods: {\n     handleOpen(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    handleClose(key, keyPath) {\n      console.log(key, keyPath);\n    },\n    // 导航数据解析\n    navDataRest(json){\n      this.configMenu=json\n      this.navOneLevel=json.leftNavList.filter((v,i)=>{ //返回只有一级的导航     \n          return !v.children    \n      })\n      this.navOverLevel=json.leftNavList.filter((v,i)=>{ //返回只有二级和三级的导航     \n          return v.children    \n      })\n      \n    }\n  },\n  mounted() {},\n  created() {\n    this.navDataRest(json)\n  },\n}\n",{"version":3,"sources":["Aside.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Aside.vue","sourceRoot":"src/components/layout","sourcesContent":["<template>\n  <div class=\"aside\">\n    <el-menu \n      default-active=\"2\" \n      :collapse='false' \n      class=\"el-menu-vertical-demo aside-menu\" \n      @open=\"handleOpen\" \n      @close=\"handleClose\" \n      :background-color=\"configMenu.backgroundColor\" \n      :text-color=\"configMenu.textColor\" \n      :active-text-color=\"configMenu.ActiveTextColor\">\n      <!-- 三级 -->\n      <el-submenu  v-for=\"(valA,iA) in navOverLevel\" :index=\"'overleave'+iA\" :key=\"iA\">\n        <template slot=\"title\">\n          <i :class=\"valA.icon\"></i>\n          <span>{{valA.title}}</span>\n        </template>\n          <!-- 三级里的二级 -->\n        <el-menu-item-group>\n          <el-menu-item v-for=\"(valB,iB) in valA.children\" :index=\"'towleave'+iA+iB\" v-if=\"!valB.children\" :key=\"iB\">{{valB.title}}</el-menu-item>\n          <el-submenu v-for=\"(valB,iB) in valA.children\" :index=\"'towleave'+iA+iB\" :key=\"iB\" v-if=\"valB.children\">\n            <span slot=\"title\">{{valB.title}}</span>\n            <el-menu-item-group>\n              <el-menu-item v-for=\"(valC,iC) in valB.children\" :index=\"'oneleave'+iA+iB+iC\" :key=\"iC\">{{valC.title}}</el-menu-item>\n            </el-menu-item-group>\n        </el-submenu>\n        </el-menu-item-group>\n      </el-submenu>\n\n      <!-- 只有一级 -->\n      <el-menu-item v-for=\"(val,i) in navOneLevel\" :index=\"'oneleave_'+i\" :key=\"'oneleave_'+i\">\n        <i :class=\"val.icon\"></i>\n        <span slot=\"title\">{{val.title}}</span>\n      </el-menu-item>\n    </el-menu>\n  </div>\n</template>\n\n<script>\n  import json from '@/config/left_nav_conf'\n  export default {\n    data() {\n      return {\n        configMenu:{},//菜单配置\n        navOneLevel:[],//一级菜单列表\n        navOverLevel:[],//多级菜单列表   \n      }\n    },\n    methods: {\n       handleOpen(key, keyPath) {\n        console.log(key, keyPath);\n      },\n      handleClose(key, keyPath) {\n        console.log(key, keyPath);\n      },\n      // 导航数据解析\n      navDataRest(json){\n        this.configMenu=json\n        this.navOneLevel=json.leftNavList.filter((v,i)=>{ //返回只有一级的导航     \n            return !v.children    \n        })\n        this.navOverLevel=json.leftNavList.filter((v,i)=>{ //返回只有二级和三级的导航     \n            return v.children    \n        })\n        \n      }\n    },\n    mounted() {},\n    created() {\n      this.navDataRest(json)\n    },\n  }\n</script>\n\n<style lang=\"less\">\n  .aside {\n    width: 200px;\n    height: 100%;\n    font-size: 14px;\n    font-weight: 100;\n    .aside-menu{\n      height: 100%;\n    }\n  }\n</style>\n\n\n"]}]}